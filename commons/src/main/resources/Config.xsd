<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.bsi.bund.de/tr-esor/checktool/1.2"
           targetNamespace="http://www.bsi.bund.de/tr-esor/checktool/1.2" elementFormDefault="qualified"
           attributeFormDefault="unqualified">
    <xs:element name="Configuration">
        <xs:annotation>
            <xs:documentation>
                The Profile element must occur for each supported profile which is not
                already implemented in the validator factory.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="General" type="tns:GeneralType"/>
                <xs:element name="Profile" type="tns:ProfileType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ConfigurableObjectType">
        <xs:annotation>
            <xs:documentation>
                Base type of configurable objects with their constructor parameters.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="className" type="xs:string"/>
            <xs:element name="parameter" type="tns:ParameterType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ParserType">
        <xs:annotation>
            <xs:documentation>
                Special parsers which parse an evidence record out of named format.
                Specified class must implement interface de.bund.bsi.tr_esor.checktool.parser.Parser.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tns:ConfigurableObjectType">
                <xs:sequence>
                    <xs:element name="parsedObjectType" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ValidatorType">
        <xs:annotation>
            <xs:documentation>
                Special validator for validating objects of type targetType. Specified class
                must implement interface de.bund.bsi.tr_esor.checktool.validation.Validator. Parameters must
                be specified as required by respective validator class.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tns:ConfigurableObjectType">
                <xs:sequence>
                    <xs:element name="targetType" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ConfiguredObjectsCollection">
        <xs:annotation>
            <xs:documentation>
                Bunch of parsers and validators
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Parser" type="tns:ParserType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Validator" type="tns:ValidatorType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GeneralType">
        <xs:annotation>
            <xs:documentation>
                Profile-independent settings. Especially, it contains parsers and validators
                which can be applied with all supported profiles. If specified the HashCreator must
                implement de.bund.bsi.tr_esor.checktool.hash.HashCreator.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="VerifierID" type="xs:anyURI"/>
            <xs:element name="DefaultProfileName" type="xs:anyURI"/>
            <xs:element name="HashCreator" type="tns:ConfigurableObjectType" minOccurs="0"/>
            <xs:element name="ConfiguredObjects" type="tns:ConfiguredObjectsCollection"
                        minOccurs="0"/>
            <xs:element name="NamespacePrefix" type="tns:NamespacePrefixType" minOccurs="0"
                        maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="NamespacePrefixType">
        <xs:annotation>
            <xs:documentation>
                The XML name space prefixes to use for hashing meta data, credentials and
                version manifests. As the prefixes get lost during web service transport, this has to be
                configured beforehand. Define an empty prefix to use as the target (prefix-less) name space.
                Default namespaces are as defined in TR-ESOR XAIP V1.3 schema.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="namespace" type="xs:anyURI" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="ProfileType">
        <xs:annotation>
            <xs:documentation>
                Defines special validators to be used in a named profile. May require
                special parsers as well.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tns:ConfiguredObjectsCollection">
                <xs:attribute name="name" type="xs:anyURI" use="required"/>
                <xs:attribute name="hashMode" type="xs:string" default="unsorted">
                    <xs:annotation>
                        <xs:documentation>
                            hashMode defines the way hashes are concatenated during ArchiveTimestamp validation.
                            Setting hashMode=unsorted (default) will hash according to RFC 4998 (section 5.2, point 4)
                            without sorting the hashes.
                            Setting hashMode=sorted will sort the hashes binary ascending according to RFC 6283 (section
                            4.2.2, point 6).
                            Setting hashMode=both will allow both variants to pass.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="validationService" type="xs:anyURI" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            URL to the WSDL of an eCard-compatible validation service. Will be used for signature and
                            timestamp check if configured.
                            Can be left out to disable online checking.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="verifySignatures" type="xs:boolean" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            When set to true signatures are verified. When set to false
                            signature verification is omitted.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="requireQualifiedTimestamps" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Set to true to require the online timestamp verification to only accept qualified timestamps
                            issued in a EU member state.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="lxaipDataDirectory" type="xs:anyURI" default=".">
                    <xs:annotation>
                        <xs:documentation>
                            Path to the directory LXAIP data object references should resolved to. The data object
                            reference's URI is then
                            resolved relative to the given directory.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ParameterType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>
